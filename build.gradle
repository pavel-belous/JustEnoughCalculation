buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "gt"
            url = "https://gregtech.overminddl1.com/"
        }
        maven {
            // GTNH ForgeGradle Fork
            // https://github.com/GTNewHorizons/ExampleMod1.7.10
            name = "GTNH Maven"
            url = "http://jenkins.usrv.eu:8081/nexus/content/groups/public/"
        }
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "jitpack"
            url = "https://jitpack.io"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2.11'
    }
}

plugins {
    id("org.ajoberstar.grgit") version("3.1.1")
}

apply plugin: "java"
apply plugin: "idea"
apply plugin: 'forge'

idea {
    module {
        inheritOutputDirs = true
        downloadJavadoc = true
        downloadSources = true
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

version = "${mc_version}-${proj_version}"
group = "me.towdium.jecalculation"
archivesBaseName = "JustEnoughCalculation"

minecraft {
    version = '1.7.10-10.13.4.1614-1.7.10'
    replace '@VERSION@', project.version
}

def commonManifest = {
    attributes 'FMLAT': 'nei_at.cfg'
}

jar {
    manifest commonManifest
}

repositories {
    mavenCentral()
    maven {
        name 'CB Repo'
        url "http://chickenbones.net/maven/"
    }
    flatDir {
        dirs 'libs'
    }
}


dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
    compile "codechicken:NotEnoughItems:${mc_version}-${nei_version}:universal"
    compile 'codechicken:CodeChickenLib:1.7.10-1.1.3.138:dev'
    compile 'codechicken:CodeChickenCore:1.7.10-1.0.7.+:dev'

    compile 'org.reflections:reflections:0.9.12'
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.2.0'
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    // Move access transformer to META-INF
    rename '(.+_at.cfg)', 'META-INF/$1'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}